package efimovta.store;

import efimovta.store.dao.impl.sim.StorageInMemory;
import efimovta.store.menu.MenuManager;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;

import static efimovta.store.Config.BACKUP_LOCATION;
import static efimovta.store.Messages.*;

/**
 * Entry point
 * Will try to download the backup. If it is missing or other problems, the data will be generated by the class.
 * After exiting the program, the backup will be saved
 */
public class Main {


    private static final String EXIT_SYMBOL = "q";

    private Main() {
    }

    /**
     * Entry point
     *
     * @param args not used
     */
    public static void main(String[] args) {
        Util.log.info(APP_START);

        File file = new File(BACKUP_LOCATION);
        if (file.exists()) {
            try {
                StorageInMemory.loadBackup(file);
            } catch (BackupException e) {
                Util.println(e.getMessage());
                Util.log.log(Level.SEVERE,
                        "problem with loading backup ("
                                + BACKUP_LOCATION + ");", e);
                Util.println("standard filler was activated");
                StorageFiller.fillStorage();
            }
        } else {
            Util.println("file not exists, standard filler was activated");
            StorageFiller.fillStorage();
        }
        Util.log.info(STORAGE_FILLED);


        try {
            MenuManager.startDialog();
        } catch (IOException e) {
            Util.println(e.getMessage());
            Util.log.log(Level.SEVERE, "Unexpected IOException!", e);
        }

        boolean saved = false;
        while (!saved) {
            try {
                StorageInMemory.saveBackup(file);
                saved = true;
            } catch (BackupException e) {
                Util.println(e.getMessage());
                Util.log.log(Level.SEVERE,
                        "problem with saving backup ("
                                + BACKUP_LOCATION + ");", e);
                Util.println("Try to save again? Press " + EXIT_SYMBOL
                        + " for exit without saving backup");
                try {
                    String otv = Util.readLine();
                    if (otv.equals(EXIT_SYMBOL)) break;
                } catch (IOException ioe) {
                    Util.println(ioe.getMessage());
                    Util.log.log(Level.SEVERE, "Unexpected IOException!", ioe);
                }
            }
        }

        Util.log.info(APP_SUCCESSFULLY_CLOSED);
    }
}
